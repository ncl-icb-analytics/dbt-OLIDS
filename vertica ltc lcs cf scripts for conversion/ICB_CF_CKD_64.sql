--ICB_CF_CKD_64 based on EMIS v14
--modifications by Eddie 4.8.23 to include CKD_base and adding in LOINC result codes for UACR to capture provider coded data KH 7.8.23
--now using new CKD_64_BASE population EMIS = '1' OR OTHER = '1'
--8.8.23 LOINC and SNOMED codes combined in JOINED_LTC_LOOKUP TABLE

-- Population for hashing
WITH HASHED_POP AS (
  SELECT EMPI_ID
  FROM (
    SELECT EMPI_ID, HASH(EMPI_ID) // 2e18 AS hash_value
    FROM NCL_MASTER_DEMOGRAPHICS
  ) AS subquery
  --WHERE hash_value >= 0 AND hash_value < 5
  where HASH_VALUE = 4
),

-- Temporary Table to Store Required Rows from PH_F_RESULT FOR UCAR
TEMP_PH_F_RESULT AS (
  SELECT C.EMPI_ID, RESULT_CODE, SOURCE_DESCRIPTION, SERVICE_DATE, max(NORM_NUMERIC_VALUE) NORM_NUMERIC_VALUE
    FROM PH_F_RESULT AS C
  --JOIN JOINED_LTC_LOOKUP AS T ON T.SNOMED_CODE = C.RESULT_CODE 
  INNER JOIN HASHED_POP USING (EMPI_ID)
  WHERE C.RESULT_CODE ='1023491000000104'
  AND C.NORM_NUMERIC_VALUE > 0
  AND DATE(c.SERVICE_DATE) >= add_months(CURRENT_DATE(), -12)
  GROUP by C.EMPI_ID, RESULT_CODE, SOURCE_DESCRIPTION, SERVICE_DATE
)
-- Temporary Table to Store Required Rows from PH_F_CONDITION
,TEMP_PH_F_CONDITION AS (
SELECT C.EMPI_ID, SOURCE_DESCRIPTION, EFFECTIVE_DT_TM as Date, T.CLUSTER_ID

  FROM PH_F_CONDITION AS C
  INNER JOIN HASHED_POP USING (EMPI_ID)
  JOIN JOINED_LTC_LOOKUP AS T ON C.CONDITION_CODE = T.SNOMED_CODE 
  WHERE T.CLUSTER_ID IN ('CKD_BPH_GOUT', 'CKD_AKI', 'Hematuria', 'Urine_Blood_Neg', 'Proteinuria')--remove P once clusters updated
  --AND C.EFFECTIVE_DT_TM IS NOT NULL
  
  UNION
  
  SELECT C.EMPI_ID, SOURCE_DESCRIPTION, c.SERVICE_START_DT_TM as Date, T.CLUSTER_ID
  FROM PH_F_PROCEDURE AS C
  INNER JOIN HASHED_POP USING (EMPI_ID)
  JOIN JOINED_LTC_LOOKUP AS T ON C.PROCEDURE_CODE = T.SNOMED_CODE 
  WHERE T.CLUSTER_ID IN ('CKD_BPH_GOUT', 'CKD_AKI', 'Hematuria', 'Urine_Blood_Neg', 'Proteinuria')--remove P once clusters updated
  --AND c.SERVICE_START_DT_TM IS NOT NULL
  
  UNION
  
  SELECT C.EMPI_ID, SOURCE_DESCRIPTION, c.SERVICE_DATE as Date, T.CLUSTER_ID
  FROM PH_F_RESULT AS C
  INNER JOIN HASHED_POP USING (EMPI_ID)
  JOIN JOINED_LTC_LOOKUP AS T ON C.RESULT_CODE = T.SNOMED_CODE 
  WHERE T.CLUSTER_ID IN ('CKD_BPH_GOUT', 'CKD_AKI', 'Hematuria', 'Urine_Blood_Neg', 'Proteinuria')--remove P once clusters updated
 -- AND c.SERVICE_DATE IS NOT NULL
),
--Temporary Table to Store Required Rows from CERNER_MEDICATION_JOINED_TABLE
RELEVANT_DRUG_CODES AS (
  SELECT M.DRUG_CODE
  FROM CERNER_MEDICATION_JOINED_TABLE M 
  INNER JOIN HASHED_POP USING (EMPI_ID)
  left JOIN JOINED_LTC_LOOKUP AS T ON T.SNOMED_CODE = M.DRUG_CODE
  WHERE T.cluster_id IN ('lithium','sulfasalazine_drug','Tacrolimus_Drug') -- RETIRED CLUSTERS: ('LIT_COD','LITSTP_COD','Calcineurin')
  ---------remove this once clusters updated:
  or m.DRUG_CODE in (
  '250211000001105',
  '704311000001105',
  '4543511000001104',
  '8628811000001100',
  '321730000',
  '4818611000001104',
  '321742005',
  '321741003',
  '565011000001106',
  '766311000001100',
  '3832311000001102',
  '426911000001101',
  '317430009',
  '16733811000001106',
  '16641711000001106',
  '16223911000001109',
  '21903111000001103',
  '330040008',
  '317432001',
  '317431008',
  '28800611000001103',
  '28800911000001109',
  '11619211000001106',
  '11619311000001103',
  '11619611000001108',
  '11619711000001104',
  '11619811000001107',
  '11620011000001100',
  '11620111000001104',
  '15603811000001106',
  '15604111000001102',
  '37939711000001107',
  '37939811000001104',
  '37939911000001109',
  '37940011000001103',
  '37940111000001102',
  '37940211000001108',
  '37940311000001100',
  '37940411000001107',
  '37940511000001106',
  '37941011000001107',
  '37941211000001102',
  '28791811000001107',
  '28791911000001102',
  '28792111000001105',
  '28792211000001104',
  '28792411000001100',
  '28792511000001101',
  '16658411000001105',
  '16658511000001109',
  '16658811000001107',
  '16658911000001102',
  '4391311000001103',
  '3384711000001102',
  '3384811000001105',
  '3385111000001104',
  '3383011000001101',
  '3383411000001105',
  '3383711000001104',
  '41770511000001100',
  '3382511000001102',
  '3382611000001103',
  '41770611000001101',
  '3384411000001108',
  '3384611000001106',
  '36529611000001108',
  '36529711000001104',
  '36530211000001102',
  '36526411000001103',
  '36526511000001104',
  '36526611000001100',
  '36647211000001107',
  '36647511000001105',
  '36647911000001103',
  '37817211000001109',
  '37817411000001108',
  '37817611000001106',
  '39264311000001106',
  '39264411000001104',
  '39264611000001101',
  '36466111000001106',
  '36466211000001100',
  '36466311000001108',
  '16658611000001108',
  '16658711000001104',
  '11649511000001103',
  '11619411000001105',
  '11619511000001109',
  '14050811000001107',
  '14051311000001108',
  '28808811000001101',
  '28791711000001104',
  '8708211000001102',
  '8708811000001101',
  '16658211000001106',
  '16658311000001103',
  '13645511000001108',
  '13645811000001106',
  '37949111000001107',
  '37940911000001104',
  '13282011000001100',
  '15614511000001109',
  '15603711000001103',
  '28808911000001106',
  '28792311000001107',
  '11649611000001104',
  '11619111000001100',
  '11649711000001108',
  '11619911000001102',
  '14051511000001102',
  '8822711000001100',
  '28809011000001102',
  '28792011000001109',
  '17489511000001107',
  '16135911000001105',
  '17489311000001101',
  '17577911000001108',
  '14051111000001106',
  '30033711000001105',
  '37342511000001100',
  '30040911000001100',
  '17578611000001103',
  '14051611000001103',
  '349822001',
  '780542003',
  '780554003',
  '780555002',
  '1172908003',
  '785964001',
  '1156148007',
  '1163325004',
  '1163324000',
  '782114001',
  '1209067002',
  '1163329005',
  '1163328002',
  '36821711000001102',
  '36809311000001108',
  '14347311000001100',
  '10839211000001102',
  '18194711000001108',
  '14347811000001109',
  '10839411000001103',
  '349823006',
  '41923411000001102',
  '45844004',
  '13388811000001101',
  '13389111000001101',
  '13389411000001106',
  '13389711000001100',
  '777645000',
  '780541005',
  '17657211000001108',
  '21296811000001102',
  '21211011000001102',
  '21211711000001100',
  '327103006',
  '1156147002',
  '1163330000',
  '1163327007',
  '1145417007',
  '327096008',
  '36616911000001106',
  '1163326003',
  '1145416003',
  '1145273002',
  '13572011000001100',
  '327097004',
  '21303211000001104',
  '23609711000001107',
  '777663000',
  '780556001',
   '330040008',
   '317431008',
   '407889001',
   '41770511000001100',
   '41770611000001101',
   '407890005'
  )
),

-- CREATING CTE FOR EMIS SOURCED 
EMIS AS (
SELECT DISTINCT EMPI_ID, 1 as 'EMIS'
FROM
(

--INCLUDING ALL PATIENTS WITH ACUTE KIDNEY INJURY IN THE lAST 3 years
SELECT DISTINCT C.EMPI_ID, SOURCE_DESCRIPTION
FROM ICB_CF_CKD_64_BASE AS B
INNER JOIN HASHED_POP USING (EMPI_ID)
INNER JOIN TEMP_PH_F_CONDITION AS C ON B.EMPI_ID = C.EMPI_ID
WHERE C.CLUSTER_ID IN ('CKD_AKI')
AND DATE(c.date) >=add_months(CURRENT_DATE(), -36)
AND C.SOURCE_DESCRIPTION = 'EMIS GP'
AND B.EMIS = '1'

UNION

--INCLUDING ALL PATIENTS WITH BPH & GOUT CONDITIONS 
SELECT DISTINCT B.EMPI_ID, SOURCE_DESCRIPTION
FROM ICB_CF_CKD_64_BASE AS B
INNER JOIN HASHED_POP USING (EMPI_ID)
INNER JOIN TEMP_PH_F_CONDITION AS C ON B.EMPI_ID = C.EMPI_ID
WHERE C.CLUSTER_ID IN ('CKD_BPH_GOUT')
AND C.SOURCE_DESCRIPTION = 'EMIS GP'
AND B.EMIS = '1'

UNION

-- INCLUDE ALL PATIENTS ON LITHIUM with an ISSUE (START DATE) in the last 6 months
SELECT DISTINCT M.EMPI_ID, M.SOURCE_DESCRIPTION
FROM ICB_CF_CKD_64_BASE AS B
INNER JOIN HASHED_POP USING (EMPI_ID)
INNER JOIN CERNER_MEDICATION_JOINED_TABLE AS M ON B.EMPI_ID = M.EMPI_ID
WHERE M.DRUG_CODE IN (SELECT DRUG_CODE FROM RELEVANT_DRUG_CODES)
AND DATE(M.START_DT_TM) >= add_months(CURRENT_DATE(), -6)
AND M.SOURCE_DESCRIPTION = 'EMIS GP'
AND B.EMIS = '1'

UNION

SELECT * FROM (
WITH MICRO_HAEM AS (
SELECT DISTINCT EMPI_ID, SOURCE_DESCRIPTION, DATE
FROM (
SELECT DISTINCT C.EMPI_ID, SOURCE_DESCRIPTION, DATE(c.date)
,ROW_NUMBER() OVER (PARTITION BY c.EMPI_ID ORDER BY DATE(c.date) DESC) AS ROW_NUMBER
FROM ICB_CF_CKD_64_BASE AS B
INNER JOIN HASHED_POP USING (EMPI_ID)
INNER JOIN TEMP_PH_F_CONDITION AS C ON B.EMPI_ID = C.EMPI_ID 
WHERE C.CLUSTER_ID = 'Hematuria'
AND c.SOURCE_DESCRIPTION = 'EMIS GP'
AND B.EMIS = '1'
) AS A 
where ROW_NUMBER = 1
)

--look for all patients with a negative urine test [RETIRED: or Proteinuria]
,URINE_NEG AS (
SELECT DISTINCT C.EMPI_ID, SOURCE_DESCRIPTION, DATE(C.date)
FROM TEMP_PH_F_CONDITION AS C 
WHERE C.CLUSTER_ID in ('Urine_Blood_Neg', 'Proteinuria')--remove P once clusters updated
AND c.SOURCE_DESCRIPTION = 'EMIS GP'

)
--look for all patients with UACR >30 
,UACR AS (
SELECT DISTINCT c.EMPI_ID, SOURCE_DESCRIPTION, DATE(SERVICE_DATE)
FROM TEMP_PH_F_RESULT AS C 
WHERE C.NORM_NUMERIC_VALUE >30
AND c.SOURCE_DESCRIPTION = 'EMIS GP')

SELECT DISTINCT H.EMPI_ID, H.SOURCE_DESCRIPTION
FROM MICRO_HAEM AS H 
LEFT JOIN URINE_NEG AS R on H.empi_id = R.empi_id 
WHERE R.EMPI_ID IS NULL OR (R.EMPI_ID IS NOT NULL AND H.Date > R.Date) --written as incl. here (excl. in EMIS), therefore >, NOT >=.

UNION 
SELECT DISTINCT H.EMPI_ID, H.SOURCE_DESCRIPTION
FROM MICRO_HAEM AS H 
LEFT JOIN UACR AS U ON H.empi_id = U.empi_id 
WHERE U.EMPI_ID IS NOT NULL AND U.Date >= H.Date
) AS A
) AS B
)

--- CREATING CTE FOR ALL SOURCED
,OTHER AS (
SELECT DISTINCT EMPI_ID, 1 as 'OTHER'
FROM
(

--INCLUDING ALL PATIENTS WITH ACUTE KIDNEY INJURY IN THE lAST 3 years
SELECT DISTINCT C.EMPI_ID, SOURCE_DESCRIPTION
FROM ICB_CF_CKD_64_BASE AS B
INNER JOIN HASHED_POP USING (EMPI_ID)
INNER JOIN TEMP_PH_F_CONDITION AS C ON B.EMPI_ID = C.EMPI_ID
WHERE C.CLUSTER_ID IN ('CKD_AKI')
AND DATE(c.date) >=add_months(CURRENT_DATE(), -36)
AND B.EMIS = '1'

UNION

--INCLUDING ALL PATIENTS WITH BPH & GOUT CONDITIONS 
SELECT DISTINCT B.EMPI_ID, SOURCE_DESCRIPTION
FROM ICB_CF_CKD_64_BASE AS B
INNER JOIN HASHED_POP USING (EMPI_ID)
INNER JOIN TEMP_PH_F_CONDITION AS C ON B.EMPI_ID = C.EMPI_ID
WHERE C.CLUSTER_ID IN ('CKD_BPH_GOUT')
AND B.EMIS = '1'

UNION

-- INCLUDE ALL PATIENTS ON LITHIUM with an ISSUE (START DATE) in the last 6 months
SELECT DISTINCT M.EMPI_ID, M.SOURCE_DESCRIPTION
FROM ICB_CF_CKD_64_BASE AS B
INNER JOIN HASHED_POP USING (EMPI_ID)
INNER JOIN CERNER_MEDICATION_JOINED_TABLE AS M ON B.EMPI_ID = M.EMPI_ID
WHERE M.DRUG_CODE IN (SELECT DRUG_CODE FROM RELEVANT_DRUG_CODES)
AND DATE(M.START_DT_TM) >= add_months(CURRENT_DATE(), -6)
AND B.EMIS = '1'

UNION

SELECT * FROM (
WITH MICRO_HAEM AS (
SELECT DISTINCT EMPI_ID, SOURCE_DESCRIPTION, DATE
FROM (
SELECT DISTINCT C.EMPI_ID, SOURCE_DESCRIPTION, DATE(C.date)
,ROW_NUMBER() OVER (PARTITION BY c.EMPI_ID ORDER BY DATE(c.date) desc) AS ROW_NUMBER
FROM ICB_CF_CKD_64_BASE AS B
INNER JOIN HASHED_POP USING (EMPI_ID)
INNER JOIN TEMP_PH_F_CONDITION AS C ON B.EMPI_ID = C.EMPI_ID 
WHERE C.CLUSTER_ID IN ('Hematuria')
AND B.EMIS = '1'
) AS A 
where ROW_NUMBER = 1
)

--look for all patients with a negative urine test or Proteinuria
,URINE_NEG AS (
SELECT DISTINCT C.EMPI_ID, SOURCE_DESCRIPTION, DATE(C.date)
FROM TEMP_PH_F_CONDITION AS C 
WHERE C.CLUSTER_ID in ('Urine_Blood_Neg', 'Proteinuria')--remove P once clusters updated
)
--look for all patients with UACR >30 
,UACR AS (
SELECT DISTINCT c.EMPI_ID, SOURCE_DESCRIPTION, DATE(SERVICE_DATE)
FROM TEMP_PH_F_RESULT AS C 
WHERE C.NORM_NUMERIC_VALUE >30
  )

SELECT DISTINCT H.EMPI_ID, H.SOURCE_DESCRIPTION
FROM MICRO_HAEM AS H 
LEFT JOIN URINE_NEG AS R on H.empi_id = R.empi_id 
WHERE R.EMPI_ID IS NULL OR (R.EMPI_ID IS NOT NULL AND H.Date > R.Date)

UNION 
SELECT DISTINCT H.EMPI_ID, H.SOURCE_DESCRIPTION
FROM MICRO_HAEM AS H 
LEFT JOIN UACR AS U ON H.empi_id = U.empi_id 
WHERE U.EMPI_ID IS NOT NULL AND U.Date >= H.Date
) AS A
) AS B
)

 -- USING 'OTHER' TABLE TO GET WHOLE COHORT AND LEFT JOINING TO SEE WHETHER THEY ARE EMIS SOURCED OR NOT
SELECT 
COALESCE(e.empi_id, o.empi_id) AS empi_id,
CASE WHEN e.EMIS = 1 THEN 'EMIS' ELSE 'Other' END AS Source
FROM EMIS AS E 
FULL OUTER JOIN OTHER AS O USING (empi_id)