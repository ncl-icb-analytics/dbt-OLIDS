-- BAME population
WITH BAME_POPULATION_EMIS AS (
    SELECT DISTINCT EMPI_ID
    FROM NCL_CODES
    WHERE CODE IN (SELECT SNOMED_CODE FROM JOINED_LTC_LOOKUP WHERE CLUSTER_ID = 'BAME_ETHNICITY')
    and SOURCE_DESCRIPTION = 'EMIS GP'
    
    EXCEPT
    SELECT EMPI_ID
    FROM NCL_CODES
    WHERE CODE IN (SELECT SNOMED_CODE FROM JOINED_LTC_LOOKUP WHERE CLUSTER_ID IN ('WHITE_BRITISH', 'DM_EXCL_ETHNICITY'))
and SOURCE_DESCRIPTION = 'EMIS GP'
),

 BAME_POPULATION_ALL AS (
    SELECT DISTINCT EMPI_ID
    FROM NCL_CODES
    WHERE CODE IN (SELECT SNOMED_CODE FROM JOINED_LTC_LOOKUP WHERE CLUSTER_ID = 'BAME_ETHNICITY')
    EXCEPT
    SELECT EMPI_ID
    FROM NCL_CODES
    WHERE CODE IN (SELECT SNOMED_CODE FROM JOINED_LTC_LOOKUP WHERE CLUSTER_ID IN ('WHITE_BRITISH', 'DM_EXCL_ETHNICITY'))
),
-- BASE population
BASE_POPULATION AS (
    SELECT DISTINCT B.EMPI_ID 
    FROM LTC_LCS_BASE AS B
    WHERE B.AGE >= 17
    
    EXCEPT
    SELECT EMPI_ID 
    FROM ICS_LTC_01
    EXCEPT
    SELECT EMPI_ID 
    FROM HEALTH_CHECK_COMP_IN_24
    EXCEPT 
    SELECT EMPI_ID
    FROM POPHEALTH_QOF_LTCS_LIST l
    WHERE LTC_NAME = 'Diabetes'
),
-- EMIS CTE
EMIS AS (
    WITH Latest_BMI AS (
        SELECT DISTINCT A.EMPI_ID, A.VALUE,
            CASE
                WHEN BAME.EMPI_ID IS NOT NULL THEN 1
                ELSE 0
            END AS Is_BAME
        FROM (
            SELECT 
                BASE_POPULATION.EMPI_ID,
                ROW_NUMBER() OVER (PARTITION BY BASE_POPULATION.EMPI_ID ORDER BY NCL_CODES.DATETIME DESC, NCL_CODES.VALUE DESC) AS Row_Num,
                NCL_CODES.VALUE
            FROM BASE_POPULATION
            LEFT OUTER JOIN NCL_CODES ON BASE_POPULATION.EMPI_ID = NCL_CODES.EMPI_ID
            WHERE 
                SOURCE_DESCRIPTION = 'EMIS GP' AND
                CODE IN (SELECT SNOMED_CODE FROM JOINED_LTC_LOOKUP WHERE CLUSTER_ID = 'BMI_CODES') AND
                NCL_CODES.VALUE IS NOT NULL
        ) AS A
        LEFT JOIN BAME_POPULATION_EMIS AS BAME ON A.EMPI_ID = BAME.EMPI_ID
        WHERE A.Row_Num = 1
    )
    SELECT DISTINCT Latest_BMI.EMPI_ID, 1 AS EMIS
    FROM Latest_BMI
    LEFT JOIN (
        SELECT DISTINCT EMPI_ID 
        FROM NCL_CODES 
        WHERE 
            SOURCE_DESCRIPTION = 'EMIS GP' AND
            CODE IN (SELECT SNOMED_CODE FROM JOINED_LTC_LOOKUP WHERE CLUSTER_ID = 'HBA1C_LEVEL') AND
            DATETIME >= ADD_MONTHS(CURRENT_DATE(),-24)
    ) AS Exc ON Latest_BMI.EMPI_ID = Exc.EMPI_ID
    WHERE Exc.EMPI_ID IS NULL  AND (
            (Latest_BMI.Is_BAME = 1 AND CAST(Latest_BMI.VALUE AS FLOAT) >= 32.5) OR
            (Latest_BMI.Is_BAME = 0 AND CAST(Latest_BMI.VALUE AS FLOAT) >= 35)
    )
),
-- OTHER CTE
OTHER AS (
    WITH Latest_BMI_OTHER AS (
        SELECT DISTINCT A.EMPI_ID, A.VALUE,
            CASE
                WHEN BAME.EMPI_ID IS NOT NULL THEN 1
                ELSE 0
            END AS Is_BAME
        FROM (
            SELECT 
                BASE_POPULATION.EMPI_ID,
                ROW_NUMBER() OVER (PARTITION BY BASE_POPULATION.EMPI_ID ORDER BY NCL_CODES.DATETIME DESC, NCL_CODES.VALUE DESC) AS Row_Num,
                NCL_CODES.VALUE
            FROM BASE_POPULATION
            LEFT OUTER JOIN NCL_CODES ON BASE_POPULATION.EMPI_ID = NCL_CODES.EMPI_ID
            WHERE 
                CODE IN (SELECT SNOMED_CODE FROM JOINED_LTC_LOOKUP WHERE CLUSTER_ID = 'BMI_CODES') AND
                NCL_CODES.VALUE IS NOT NULL
        ) AS A
        LEFT JOIN BAME_POPULATION_ALL AS BAME ON A.EMPI_ID = BAME.EMPI_ID
        WHERE A.Row_Num = 1
    )
    SELECT DISTINCT Latest_BMI_OTHER.EMPI_ID, 1 AS OTHER
    FROM Latest_BMI_OTHER
    LEFT JOIN (
        SELECT DISTINCT EMPI_ID 
        FROM NCL_CODES 
        WHERE 
            CODE IN (SELECT SNOMED_CODE FROM JOINED_LTC_LOOKUP WHERE CLUSTER_ID = 'HBA1C_LEVEL') AND
            DATETIME >= ADD_MONTHS(CURRENT_DATE(),-24)
    ) AS Exc ON Latest_BMI_OTHER.EMPI_ID = Exc.EMPI_ID
    WHERE Exc.EMPI_ID IS NULL  AND (
            (Latest_BMI_OTHER.Is_BAME = 1 AND CAST(Latest_BMI_OTHER.VALUE AS FLOAT) >= 32.5) OR
            (Latest_BMI_OTHER.Is_BAME = 0 AND CAST(Latest_BMI_OTHER.VALUE AS FLOAT) >= 35)
    )
)

SELECT 
    COALESCE(E.EMPI_ID, O.EMPI_ID) AS EMPI_ID,
    CASE 
        WHEN E.EMIS = 1 THEN 'EMIS'
        ELSE 'Other'
    END AS Source
FROM EMIS AS E
FULL OUTER JOIN OTHER AS O ON E.EMPI_ID = O.EMPI_ID;