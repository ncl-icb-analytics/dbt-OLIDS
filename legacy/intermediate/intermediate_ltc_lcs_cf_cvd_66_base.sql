CREATE OR REPLACE DYNAMIC TABLE DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.INTERMEDIATE_LTC_LCS_CF_CVD_66_BASE (
    PERSON_ID VARCHAR,
    SK_PATIENT_ID VARCHAR,
    AGE NUMBER,
    HAS_STATIN BOOLEAN,
    HAS_STATIN_ALLERGY BOOLEAN,
    HAS_STATIN_DECISION BOOLEAN,
    HAS_HEALTH_CHECK BOOLEAN,
    LATEST_STATIN_DATE DATE,
    LATEST_STATIN_ALLERGY_DATE DATE,
    LATEST_STATIN_DECISION_DATE DATE,
    LATEST_HEALTH_CHECK_DATE DATE
)
COMMENT = 'Base population for CVD 66 case finding indicator. Includes patients aged 75-83 who are not on statins, have no statin allergies/contraindications, no recent statin decisions, and no health checks in last 24 months.'
TARGET_LAG = '4 hours'
REFRESH_MODE = AUTO
INITIALIZE = ON_CREATE
WAREHOUSE = NCL_ANALYTICS_XS
AS
WITH BasePopulation AS (
    -- Get base population of patients aged 75-83
    SELECT DISTINCT
        bp.PERSON_ID,
        bp.SK_PATIENT_ID,
        age.AGE
    FROM DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.INTERMEDIATE_LTC_LCS_CF_BASE_POPULATION bp
    JOIN DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PERSON_AGE age
        USING (PERSON_ID)
    WHERE age.AGE BETWEEN 75 AND 83
),
StatinMedications AS (
    -- Get patients on statins in last 12 months
    SELECT
        PERSON_ID,
        MAX(CLINICAL_EFFECTIVE_DATE) AS LATEST_STATIN_DATE
    FROM DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.INTERMEDIATE_LTC_LCS_RAW_DATA
    WHERE CLUSTER_ID IN ('STATIN_CVD_MEDICATIONS', 'STATIN_CVD_63_MEDICATIONS', 'STATIN_CVD_64_MEDICATIONS', 'STATIN_CVD_65_MEDICATIONS')
        AND CLINICAL_EFFECTIVE_DATE >= ADD_MONTHS(CURRENT_DATE(), -12)
    GROUP BY PERSON_ID
),
StatinAllergies AS (
    -- Get patients with statin allergies or contraindications
    SELECT
        PERSON_ID,
        MAX(CLINICAL_EFFECTIVE_DATE) AS LATEST_STATIN_ALLERGY_DATE
    FROM DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.INTERMEDIATE_LTC_LCS_RAW_DATA
    WHERE CLUSTER_ID IN ('STATIN_ALLERGY_ADVERSE_REACTION', 'STATIN_NOT_INDICATED')
    GROUP BY PERSON_ID
),
StatinDecisions AS (
    -- Get patients with statin decisions in last 60 months
    SELECT
        PERSON_ID,
        MAX(CLINICAL_EFFECTIVE_DATE) AS LATEST_STATIN_DECISION_DATE
    FROM DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.INTERMEDIATE_LTC_LCS_RAW_DATA
    WHERE CLUSTER_ID = 'STATINDEC_COD'
        AND CLINICAL_EFFECTIVE_DATE >= ADD_MONTHS(CURRENT_DATE(), -60)
    GROUP BY PERSON_ID
),
HealthChecks AS (
    -- Get patients with health checks in last 24 months
    SELECT
        PERSON_ID,
        MAX(CLINICAL_EFFECTIVE_DATE) AS LATEST_HEALTH_CHECK_DATE
    FROM DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.INTERMEDIATE_LTC_LCS_RAW_DATA
    WHERE CLUSTER_ID = 'HEALTH_CHECK_COMP'
        AND CLINICAL_EFFECTIVE_DATE >= ADD_MONTHS(CURRENT_DATE(), -24)
    GROUP BY PERSON_ID
)
-- Final selection
SELECT
    bp.PERSON_ID,
    bp.SK_PATIENT_ID,
    bp.AGE,
    COALESCE(sm.PERSON_ID IS NOT NULL, FALSE) AS HAS_STATIN,
    COALESCE(sa.PERSON_ID IS NOT NULL, FALSE) AS HAS_STATIN_ALLERGY,
    COALESCE(sd.PERSON_ID IS NOT NULL, FALSE) AS HAS_STATIN_DECISION,
    COALESCE(hc.PERSON_ID IS NOT NULL, FALSE) AS HAS_HEALTH_CHECK,
    sm.LATEST_STATIN_DATE,
    sa.LATEST_STATIN_ALLERGY_DATE,
    sd.LATEST_STATIN_DECISION_DATE,
    hc.LATEST_HEALTH_CHECK_DATE
FROM BasePopulation bp
LEFT JOIN StatinMedications sm
    USING (PERSON_ID)
LEFT JOIN StatinAllergies sa
    USING (PERSON_ID)
LEFT JOIN StatinDecisions sd
    USING (PERSON_ID)
LEFT JOIN HealthChecks hc
    USING (PERSON_ID)
WHERE NOT COALESCE(sm.PERSON_ID IS NOT NULL, FALSE)  -- Not on statins
    AND NOT COALESCE(sa.PERSON_ID IS NOT NULL, FALSE)  -- No statin allergies
    AND NOT COALESCE(sd.PERSON_ID IS NOT NULL, FALSE)  -- No statin decisions
    AND NOT COALESCE(hc.PERSON_ID IS NOT NULL, FALSE);  -- No health checks in last 24 months 