--ICB_CF_CKD_62 new logic focussing on UACR
--6.9.23 repoint to ICS_LTC_01 REDO base population to match CKD_61 & add in LOINC code for OTHER UACR AND UACR >4
--13.9.23 limiting to one result per day (max) and removing same result on two adjacent days
--11.10.23 Adding LOINC '32294-1' to UACR for Other CTE

--- CREATING CTE FOR EMIS SOURCED
WITH EMIS AS (
SELECT EMPI_ID, 1 AS EMIS
FROM 
(
WITH BASE_POPULATION AS 
(
SELECT b.EMPI_ID FROM LTC_LCS_BASE AS B
LEFT JOIN POPHEALTH_QOF_LTCS_LIST AS L ON L.EMPI_ID = B.EMPI_ID  AND l.LTC_NAME IN ('Chronic Kidney Disease', 'Diabetes')
LEFT JOIN ICS_LTC_01 AS L2 ON L2.EMPI_ID = B.EMPI_ID
WHERE 
B.AGE >=17 AND
L.EMPI_ID IS NULL AND 
L2.EMPI_ID IS NULL 
),

-- CREATING INCLUSION CRITERIA FOR PATIENTS WITH 2 OR MORE UACRs RECORDED WITH A VALUE >0, AND REMOVING MULTIPLE RESULTS ON SAME DAY
PATIENT_LIST AS (
SELECT DISTINCT C.EMPI_ID, SOURCE_DESCRIPTION, SERVICE_DATE, MAX(NORM_NUMERIC_VALUE) NORM_NUMERIC_VALUE, RESULT_CODE
FROM BASE_POPULATION AS B
INNER JOIN PH_F_RESULT AS C ON B.EMPI_ID = C.EMPI_ID
WHERE C.RESULT_CODE in ('1023491000000104')
AND SOURCE_DESCRIPTION = 'EMIS GP' 
AND c.NORM_NUMERIC_VALUE >0 
GROUP BY C.EMPI_ID, SOURCE_DESCRIPTION, SERVICE_DATE, RESULT_CODE
),

-- CHECKING FOR SAME RESULTS ONE DAY APART
SAMERESULT AS (
SELECT *,
CASE WHEN SERVICE_DATE + 1 = LAG(SERVICE_DATE) OVER (PARTITION BY pl.EMPI_ID ORDER BY SERVICE_DATE DESC) 
AND NORM_NUMERIC_VALUE = LAG(NORM_NUMERIC_VALUE) OVER (PARTITION BY pl.EMPI_ID ORDER BY SERVICE_DATE DESC)
THEN 'EXCLUDE' 
ELSE 'INCLUDE'
END SAMERESULTDIFFDAY
FROM PATIENT_LIST PL
),

-- FINDING AND INDEXING ALL UACR TESTS
PATIENT_ROWS AS (
SELECT *,
ROW_NUMBER() OVER (PARTITION BY EMPI_ID ORDER BY SERVICE_DATE DESC) AS ROW_NUMBER
FROM SAMERESULT
WHERE SAMERESULTDIFFDAY = 'INCLUDE'
--WHERE RESULT_CODE = '1023491000000104'
),

-- REMOVING PATIENTS WITH ONLY ONE UACR (WE NEED 2 OR MORE)
ROWS_OVER1 AS (SELECT EMPI_ID, COUNT(*) FROM PATIENT_ROWS
GROUP BY 1
HAVING COUNT(*) >1),

-- FINDING THE TOP 2 MOST RECENT EGFR TESTS WITH A VALUE ABOVE 4
RECENT2 AS (SELECT pr.EMPI_ID, SOURCE_DESCRIPTION, SERVICE_DATE, 
LAG(SERVICE_DATE) OVER (PARTITION BY pr.EMPI_ID ORDER BY SERVICE_DATE DESC) AS SERVICE_DATE2,
NORM_NUMERIC_VALUE, LAG(NORM_NUMERIC_VALUE) OVER (PARTITION BY pr.EMPI_ID ORDER BY SERVICE_DATE DESC) AS NORM_NUMERIC_VALUE2
FROM PATIENT_ROWS pr
INNER JOIN ROWS_OVER1 USING(EMPI_ID)
WHERE 
ROW_NUMBER IN ('1','2')
)

-- FINAL TABLE 
SELECT DISTINCT EMPI_ID, SOURCE_DESCRIPTION 
FROM RECENT2
WHERE NORM_NUMERIC_VALUE >4 AND NORM_NUMERIC_VALUE2 >4

)a
),

--- CREATING CTE FOR ALL SOURCED
OTHER AS (
SELECT EMPI_ID, 1 AS OTHER
FROM 
(
WITH BASE_POPULATION AS 
(
SELECT b.EMPI_ID FROM LTC_LCS_BASE AS B
LEFT JOIN POPHEALTH_QOF_LTCS_LIST AS L ON L.EMPI_ID = B.EMPI_ID  AND l.LTC_NAME IN ('Chronic Kidney Disease', 'Diabetes')
LEFT JOIN ICS_LTC_01 AS L2 ON L2.EMPI_ID = B.EMPI_ID
WHERE 
B.AGE >=17 AND
L.EMPI_ID IS NULL AND 
L2.EMPI_ID IS NULL 
),

-- CREATING INCLUSION CRITERIA FOR PATIENTS WITH 2 OR MORE UACRs RECORDED WITH A VALUE >0, AND REMOVING MULTIPLE RESULTS ON SAME DAY
PATIENT_LIST AS (
SELECT DISTINCT C.EMPI_ID, SOURCE_DESCRIPTION, SERVICE_DATE, MAX(NORM_NUMERIC_VALUE) NORM_NUMERIC_VALUE, RESULT_CODE
FROM BASE_POPULATION AS B
INNER JOIN PH_F_RESULT AS C ON B.EMPI_ID = C.EMPI_ID
WHERE C.RESULT_CODE in ('1023491000000104','32294-1')
AND c.NORM_NUMERIC_VALUE >0 
GROUP BY C.EMPI_ID, SOURCE_DESCRIPTION, SERVICE_DATE, RESULT_CODE
),

-- CHECKING FOR SAME RESULTS ONE DAY APART
SAMERESULT AS (
SELECT *,
CASE WHEN SERVICE_DATE + 1 = LAG(SERVICE_DATE) OVER (PARTITION BY pl.EMPI_ID ORDER BY SERVICE_DATE DESC) 
AND NORM_NUMERIC_VALUE = LAG(NORM_NUMERIC_VALUE) OVER (PARTITION BY pl.EMPI_ID ORDER BY SERVICE_DATE DESC)
THEN 'EXCLUDE' 
ELSE 'INCLUDE'
END SAMERESULTDIFFDAY
FROM PATIENT_LIST PL
),

-- FINDING AND INDEXING ALL UACR TESTS
PATIENT_ROWS AS (
SELECT *,
ROW_NUMBER() OVER (PARTITION BY EMPI_ID ORDER BY SERVICE_DATE DESC) AS ROW_NUMBER
FROM SAMERESULT
WHERE SAMERESULTDIFFDAY = 'INCLUDE'
--WHERE RESULT_CODE = '1023491000000104'
),

-- REMOVING PATIENTS WITH ONLY ONE UACR (WE NEED 2 OR MORE)
ROWS_OVER1 AS (SELECT EMPI_ID, COUNT(*) FROM PATIENT_ROWS
GROUP BY 1
HAVING COUNT(*) >1),

-- FINDING THE TOP 2 MOST RECENT UACR TESTS WITH A VALUE ABOVE 4
RECENT2 AS (SELECT pr.EMPI_ID, SOURCE_DESCRIPTION, SERVICE_DATE, 
LAG(SERVICE_DATE) OVER (PARTITION BY pr.EMPI_ID ORDER BY SERVICE_DATE DESC) AS SERVICE_DATE2,
NORM_NUMERIC_VALUE, LAG(NORM_NUMERIC_VALUE) OVER (PARTITION BY pr.EMPI_ID ORDER BY SERVICE_DATE DESC) AS NORM_NUMERIC_VALUE2
FROM PATIENT_ROWS pr
INNER JOIN ROWS_OVER1 USING(EMPI_ID)
WHERE 
ROW_NUMBER IN ('1','2')
)

-- FINAL TABLE 
SELECT DISTINCT EMPI_ID, SOURCE_DESCRIPTION 
FROM RECENT2
WHERE NORM_NUMERIC_VALUE >4 AND NORM_NUMERIC_VALUE2 >4
) AS B
) 
  -- USING 'OTHER' TABLE TO GET WHOLE COHORT AND LEFT JOINING TO SEE WHETHER THEY ARE EMIS SOURCED OR NOT
SELECT 
COALESCE(e.empi_id, o.empi_id) AS empi_id,
CASE WHEN e.EMIS = 1 THEN 'EMIS' ELSE 'Other' END AS Source
FROM EMIS AS E 
FULL OUTER JOIN OTHER AS O USING (empi_id)