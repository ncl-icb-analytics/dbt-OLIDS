{{ config(
    materialized='table',
    post_hook=[
        "COMMENT ON TABLE {{ this }} IS 'Mart: LTC LCS Case Finding DM_63 - Identifies patients with borderline HbA1c levels requiring diabetes surveillance and intervention.

Business Purpose:
â€¢ Support systematic case finding for patients with HbA1c in pre-diabetic range requiring ongoing monitoring
â€¢ Enable early intervention for diabetes prevention in patients with borderline glucose control
â€¢ Provide clinical decision support for diabetes surveillance in high-risk populations
â€¢ Support quality improvement initiatives for diabetes prevention and early detection programmes

Data Granularity:
â€¢ One row per person aged 17+ with latest HbA1c between 46-47 mmol/mol lacking recent monitoring
â€¢ Includes patients with borderline glycaemic control requiring enhanced surveillance
â€¢ Limited to patients in pre-diabetic range without recent diabetes assessment

Key Features:
â€¢ Borderline HbA1c identification (46-47 mmol/mol) for enhanced diabetes surveillance
â€¢ Monitoring gap detection for patients requiring ongoing diabetes risk assessment
â€¢ Evidence-based case finding supporting diabetes prevention in borderline glycaemic populations
â€¢ Integration with diabetes prevention pathways for targeted lifestyle and medical intervention

ðŸ¤– Generated by dbt. This table is managed by dbt - for model definitions and documentation, see https://github.com/ncl-icb-analytics/snowflake-hei-migration'"
    ]
) }}

-- Intermediate model for LTC LCS CF DM_63 case finding
-- Patients who meet ALL of the following criteria:
-- 1. Latest HbA1c reading is â‰¥ 46 but < 48 mmol/mol
-- 2. No HbA1c reading in the last 12 months

WITH base_population AS (
    -- Get base population aged 17+ (already excludes LTC registers and NHS health checks)
    SELECT DISTINCT
        person_id,
        age
    FROM {{ ref('int_ltc_lcs_cf_base_population') }}
    WHERE age >= 17
),

hba1c_readings AS (
    -- Get all HbA1c readings with values > 0
    SELECT
        person_id,
        clinical_effective_date,
        result_value,
        mapped_concept_code,
        mapped_concept_display
    FROM {{ ref('int_ltc_lcs_dm_observations') }}
    WHERE
        cluster_id = 'HBA1C_LEVEL'
        AND result_value > 0
),

latest_hba1c AS (
    -- Get the most recent HbA1c reading for each person
    SELECT
        person_id,
        clinical_effective_date AS latest_hba1c_date,
        result_value AS latest_hba1c_value,
        ARRAY_AGG(DISTINCT mapped_concept_code) WITHIN GROUP (
            ORDER BY mapped_concept_code
        ) AS all_hba1c_codes,
        ARRAY_AGG(DISTINCT mapped_concept_display) WITHIN GROUP (
            ORDER BY mapped_concept_display
        ) AS all_hba1c_displays
    FROM hba1c_readings
    GROUP BY person_id, clinical_effective_date, result_value
    QUALIFY
        ROW_NUMBER()
            OVER (PARTITION BY person_id ORDER BY clinical_effective_date DESC)
        = 1
),

recent_hba1c AS (
    -- Get patients with HbA1c in last 12 months (for exclusion)
    SELECT DISTINCT person_id
    FROM hba1c_readings
    WHERE clinical_effective_date >= DATEADD(YEAR, -1, CURRENT_DATE())
)

-- Final selection with elevated HbA1c assessment
SELECT
    bp.person_id,
    bp.age,
    hba1c.latest_hba1c_date,
    hba1c.latest_hba1c_value,
    hba1c.all_hba1c_codes,
    hba1c.all_hba1c_displays,
    COALESCE(
        hba1c.latest_hba1c_value >= 46
        AND hba1c.latest_hba1c_value < 48
        AND rh.person_id IS NULL, FALSE
    ) AS has_elevated_hba1c
FROM base_population AS bp
LEFT JOIN latest_hba1c AS hba1c ON bp.person_id = hba1c.person_id
LEFT JOIN recent_hba1c AS rh ON bp.person_id = rh.person_id
WHERE
    hba1c.latest_hba1c_value >= 46
    AND hba1c.latest_hba1c_value < 48
    AND rh.person_id IS NULL
