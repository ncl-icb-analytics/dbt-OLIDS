{{
    config(
        materialized='table',
        tags=['dimension', 'person', 'demographics', 'comprehensive'],
        cluster_by=['person_id'],
        post_hook=[
            "COMMENT ON TABLE {{ this }} IS 'Mart: Person Demographics - Comprehensive demographic profiles for population health analytics.

Population Scope:
â€¢ All persons with recorded birth dates
â€¢ Includes both active and inactive patients
â€¢ One row per person with comprehensive demographic information

Key Features:
â€¢ Consolidated demographics from multiple dimension tables
â€¢ Age, sex, ethnicity, language, and geographic information
â€¢ Current practice registration and organisational hierarchy
â€¢ Address and household linkage capability

ðŸ¤– Generated by dbt. This table is managed by dbt - for model definitions and documentation, see https://github.com/ncl-icb-analytics/dbt-olids'"
        ]
    )
}}

/*
Comprehensive Person Demographics Dimension Table
Provides a single source of truth for person demographics by consolidating information from:
- Age and birth/death information
- Sex demographics
- Ethnicity details
- Language and communication needs
- Current practice registration
- Practice neighbourhood and organisational hierarchy
- Geographic placeholders for future data (LSOA 2021, ward, IMD 2019)

Note: Working with dummy data so some geographic fields will be NULL until proper data is available.
Geographic fields include version numbers (LSOA_21, IMD_19) to support historical comparisons when new versions become available.
*/

WITH current_addresses AS (
    -- Get the most recent address for each person
    SELECT
        pp.person_id,
        pa.post_code_hash,
        -- UPRN hash will be available in real data, placeholder for now
        NULL AS uprn_hash,
        ROW_NUMBER() OVER (
            PARTITION BY pp.person_id
            ORDER BY pa.start_date DESC, pa.lds_datetime_data_acquired DESC
        ) AS address_rank
    FROM {{ ref('stg_olids_patient_person') }} AS pp
    INNER JOIN {{ ref('stg_olids_patient_address') }} AS pa
        ON pp.patient_id = pa.patient_id
    WHERE pa.end_date IS NULL OR pa.end_date >= CURRENT_DATE()
)

SELECT
    -- Core Identifiers
    age.person_id,
    age.sk_patient_id,

    -- Status Flags
    age.is_deceased,
    age.birth_year,

    -- Basic Demographics
    age.birth_date_approx,
    age.death_year,
    age.death_date_approx,
    age.age,
    age.age_life_stage,

    -- Age and Age Bands
    age.age_band_5y,
    age.age_band_10y,
    age.age_band_nhs,
    age.age_band_ons,
    eth.ethnicity_category,
    eth.ethnicity_subcategory,

    -- Ethnicity
    eth.ethnicity_granular,
    lang.language AS main_language,
    lang.language_category,

    -- Language and Communication
    lang.interpreter_type,
    prac.practice_code AS current_practice_code,
    prac.practice_name AS current_practice_name,
    prac.practice_postcode AS current_practice_postcode,

    -- Current Practice Registration
    prac.registration_start_date,
    pcn.pcn_code,
    pcn.pcn_name,
    nbhd.local_authority,

    -- Practice Neighbourhood and Organisational Hierarchy
    nbhd.practice_neighbourhood,
    addr.post_code_hash,
    addr.uprn_hash,
    NULL::VARCHAR AS household_id,

    -- Geographic Information (Current and placeholders for future data)
    NULL AS lsoa_code_21,
    NULL AS lsoa_name_21,

    -- Household linkage (will be populated when real UPRN data available)
    NULL AS ward_code,  -- Link to dim_households via UPRN hash

    NULL AS ward_name,
    NULL::NUMBER AS imd_decile_19,
    NULL::NUMBER AS imd_quintile_19,
    COALESCE(active.is_active, FALSE) AS is_active,
    COALESCE(sex.sex, 'Unknown') AS sex,
    COALESCE(lang.interpreter_needed, FALSE) AS interpreter_needed

FROM {{ ref('dim_person_age') }} AS age

-- Join demographics
LEFT JOIN {{ ref('dim_person_sex') }} AS sex
    ON age.person_id = sex.person_id

LEFT JOIN {{ ref('dim_person_ethnicity') }} AS eth
    ON age.person_id = eth.person_id

LEFT JOIN {{ ref('dim_person_main_language') }} AS lang
    ON age.person_id = lang.person_id

-- Join practice information
LEFT JOIN {{ ref('dim_person_current_practice') }} AS prac
    ON age.person_id = prac.person_id

-- Join practice neighbourhood information
LEFT JOIN {{ ref('dim_practice_neighbourhood') }} AS nbhd
    ON prac.practice_code = nbhd.practice_code

-- Join practice PCN and commissioning information
LEFT JOIN {{ ref('dim_practice_pcn') }} AS pcn
    ON prac.practice_code = pcn.practice_code

-- Join active patient status
LEFT JOIN {{ ref('dim_person_active_patients') }} AS active
    ON age.person_id = active.person_id

-- Join current address information
LEFT JOIN current_addresses AS addr
    ON
        age.person_id = addr.person_id
        AND addr.address_rank = 1
