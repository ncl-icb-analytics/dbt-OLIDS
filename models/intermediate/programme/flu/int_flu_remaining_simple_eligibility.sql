/*
Flu Remaining Simple Rules Eligibility Intermediate Model

Implements simple single-cluster eligibility rules that weren't covered in the main simple rules model.
These are specific rule groups with straightforward business logic.

Rule Groups Covered:
- CNS_GROUP: Chronic neurological disease codes
- ASPLENIA_GROUP: Asplenia/spleen dysfunction codes  
- LEARNDIS_GROUP: Learning disability codes

This model uses the same pattern as int_flu_simple_rules but focuses on these specific groups.
*/

{{ config(
    materialized='table',
    post_hook=[
        "COMMENT ON TABLE {{ this }} IS 'Intermediate: Flu Remaining Simple Eligibility - Processes remaining single-cluster eligibility rules for specific flu vaccination clinical conditions.

Clinical Purpose:
â€¢ Evaluates chronic neurological disease eligibility for flu vaccination
â€¢ Processes asplenia and spleen dysfunction eligibility criteria
â€¢ Implements learning disability flu vaccination targeting
â€¢ Complements main simple rules model with specific clinical condition groups

Data Granularity:
â€¢ One row per eligible person aged 6 months to 65 years per rule group
â€¢ CNS_GROUP: chronic neurological conditions (MS, motor neurone disease)
â€¢ ASPLENIA_GROUP: asplenia or splenic dysfunction
â€¢ LEARNDIS_GROUP: learning disabilities

Key Features:
â€¢ Single-cluster evaluation per rule group with specific clinical conditions
â€¢ Date qualifier logic: earliest for CNS/asplenia, latest for learning disabilities
â€¢ Age restrictions: 6 months to 65 years at reference date
â€¢ Complements main simple rules model with targeted clinical groups

ðŸ¤– Generated by dbt. This table is managed by dbt - for model definitions and documentation, see https://github.com/ncl-icb-analytics/snowflake-hei-migration'"
    ]
) }}

{%- set current_campaign = var('flu_current_campaign') -%}

-- Get CNS eligibility (Chronic Neurological Disease)
WITH cns_eligibility AS (
    SELECT 
        '{{ current_campaign }}' AS campaign_id,
        'CNS_GROUP' AS rule_group_id,
        'Chronic Neurological Disease' AS rule_group_name,
        obs.person_id,
        MIN(obs.clinical_effective_date) AS qualifying_event_date,  -- EARLIEST
        'Chronic neurological conditions (MS, motor neurone disease, etc.)' AS description
    FROM ({{ get_flu_observations_for_rule_group(current_campaign, 'CNS_GROUP') }}) obs
    WHERE obs.cluster_id = 'CNSGROUP_COD'
        AND obs.clinical_effective_date IS NOT NULL
        AND obs.clinical_effective_date <= {{ get_flu_audit_date(current_campaign) }}
    GROUP BY obs.person_id
),

-- Get ASPLENIA eligibility (Asplenia/Spleen Dysfunction)
asplenia_eligibility AS (
    SELECT 
        '{{ current_campaign }}' AS campaign_id,
        'ASPLENIA_GROUP' AS rule_group_id,
        'Asplenia' AS rule_group_name,
        obs.person_id,
        MIN(obs.clinical_effective_date) AS qualifying_event_date,  -- EARLIEST
        'Asplenia or splenic dysfunction' AS description
    FROM ({{ get_flu_observations_for_rule_group(current_campaign, 'ASPLENIA_GROUP') }}) obs
    WHERE obs.cluster_id = 'PNSPLEEN_COD'
        AND obs.clinical_effective_date IS NOT NULL
        AND obs.clinical_effective_date <= {{ get_flu_audit_date(current_campaign) }}
    GROUP BY obs.person_id
),

-- Get LEARNING DISABILITY eligibility
learndis_eligibility AS (
    SELECT 
        '{{ current_campaign }}' AS campaign_id,
        'LEARNDIS_GROUP' AS rule_group_id,
        'Learning Disability' AS rule_group_name,
        obs.person_id,
        MAX(obs.clinical_effective_date) AS qualifying_event_date,  -- LATEST
        'Learning disabilities' AS description
    FROM ({{ get_flu_observations_for_rule_group(current_campaign, 'LEARNDIS_GROUP') }}) obs
    WHERE obs.cluster_id = 'LEARNDIS_COD'
        AND obs.clinical_effective_date IS NOT NULL
        AND obs.clinical_effective_date <= {{ get_flu_audit_date(current_campaign) }}
    GROUP BY obs.person_id
),

-- Union all simple rule groups
all_simple_eligibility AS (
    SELECT * FROM cns_eligibility
    UNION ALL
    SELECT * FROM asplenia_eligibility
    UNION ALL
    SELECT * FROM learndis_eligibility
),

-- Get campaign reference date for age calculations
campaign_config AS (
    SELECT 
        campaign_id,
        MAX(CASE WHEN rule_group_id = 'ALL' AND date_type = 'ref_dat' THEN date_value END) AS reference_date
    FROM {{ ref('stg_flu_campaign_dates') }}
    WHERE campaign_id = '{{ current_campaign }}'
    GROUP BY campaign_id
)

-- Apply age restrictions and add demographic info
SELECT 
    ase.campaign_id,
    ase.rule_group_id,
    ase.rule_group_name,
    ase.person_id,
    ase.qualifying_event_date,
    cc.reference_date,
    ase.description,
    demo.birth_date_approx,
    DATEDIFF('month', demo.birth_date_approx, cc.reference_date) AS age_months_at_ref_date,
    DATEDIFF('year', demo.birth_date_approx, cc.reference_date) AS age_years_at_ref_date,
    {{ get_flu_audit_date(current_campaign) }} AS created_at
FROM all_simple_eligibility ase
CROSS JOIN campaign_config cc
JOIN {{ ref('dim_person_demographics') }} demo
    ON ase.person_id = demo.person_id
WHERE 1=1
    -- Age restrictions: 6 months to 65 years (as per flu_programme_logic.csv)
    AND DATEDIFF('month', demo.birth_date_approx, cc.reference_date) >= 6
    AND DATEDIFF('year', demo.birth_date_approx, cc.reference_date) < 65

ORDER BY rule_group_id, person_id