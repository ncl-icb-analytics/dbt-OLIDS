{{
    config(
        materialized='table',
        cluster_by=['person_id', 'order_date'],
        post_hook=[
            "COMMENT ON TABLE {{ this }} IS 'Intermediate: Inhaled Corticosteroid Medication Orders - All recorded ICS prescriptions for respiratory conditions.

Clinical Purpose:
â€¢ Tracks inhaled corticosteroid therapy for asthma and COPD management
â€¢ Supports respiratory disease monitoring and medication review processes
â€¢ Enables analysis of single agent vs combination therapy patterns

Data Granularity:
â€¢ One row per medication order
â€¢ Includes all patients regardless of status (active/inactive/deceased)
â€¢ Historical data maintained for longitudinal analysis

Key Features:
â€¢ Classification by ICS type (single agent vs combination preparations)
â€¢ Specific corticosteroid identification (beclometasone, budesonide, fluticasone)
â€¢ Combination therapy mapping (ICS/LABA preparations)
â€¢ MART therapy eligibility flags for asthma management

ðŸ¤– Generated by dbt. This table is managed by dbt - for model definitions and documentation, see https://github.com/ncl-icb-analytics/snowflake-hei-migration'"
        ]
    )
}}

/*
All inhaled corticosteroid medication orders for respiratory conditions.
Uses BNF classification (3.2) for inhaled corticosteroids.
Includes ALL persons (active, inactive, deceased) following intermediate layer principles.
*/

SELECT
    base_orders.person_id,
    base_orders.medication_order_id,
    base_orders.medication_statement_id,
    base_orders.order_date,
    base_orders.order_medication_name,
    base_orders.order_dose,
    base_orders.order_quantity_value,
    base_orders.order_quantity_unit,
    base_orders.order_duration_days,
    base_orders.statement_medication_name,
    base_orders.mapped_concept_code,
    base_orders.mapped_concept_display,
    base_orders.bnf_code,
    base_orders.bnf_name,

    -- Inhaled corticosteroid type classification
    CASE
        WHEN base_orders.bnf_code LIKE '030200%' THEN 'SINGLE_AGENT'      -- Single agent corticosteroids
        WHEN base_orders.bnf_code LIKE '030201%' THEN 'COMBINATION'       -- Combination preparations
        ELSE 'OTHER_ICS'
    END AS ics_type,

    -- Specific inhaled corticosteroid classification
    CASE
        WHEN base_orders.statement_medication_name LIKE '%BECLOMETASONE%' OR base_orders.bnf_code LIKE '0302000C0%' THEN 'BECLOMETASONE'
        WHEN base_orders.statement_medication_name LIKE '%BUDESONIDE%' OR base_orders.bnf_code LIKE '0302000K0%' THEN 'BUDESONIDE'
        WHEN base_orders.statement_medication_name LIKE '%CICLESONIDE%' OR base_orders.bnf_code LIKE '0302000U0%' THEN 'CICLESONIDE'
        WHEN base_orders.statement_medication_name LIKE '%FLUTICASONE%' OR base_orders.bnf_code LIKE '0302000N0%' THEN 'FLUTICASONE'
        WHEN base_orders.statement_medication_name LIKE '%MOMETASONE%' OR base_orders.bnf_code LIKE '0302000R0%' THEN 'MOMETASONE'
        ELSE 'OTHER_ICS'
    END AS specific_ics,

    -- Combination therapy classification
    CASE
        WHEN base_orders.statement_medication_name LIKE '%BUDESONIDE%' AND base_orders.statement_medication_name LIKE '%FORMOTEROL%' THEN 'BUDESONIDE_FORMOTEROL'
        WHEN base_orders.statement_medication_name LIKE '%FLUTICASONE%' AND base_orders.statement_medication_name LIKE '%SALMETEROL%' THEN 'FLUTICASONE_SALMETEROL'
        WHEN base_orders.statement_medication_name LIKE '%FLUTICASONE%' AND base_orders.statement_medication_name LIKE '%VILANTEROL%' THEN 'FLUTICASONE_VILANTEROL'
        WHEN base_orders.statement_medication_name LIKE '%BECLOMETASONE%' AND base_orders.statement_medication_name LIKE '%FORMOTEROL%' THEN 'BECLOMETASONE_FORMOTEROL'
        WHEN base_orders.bnf_code LIKE '030201%' THEN 'OTHER_COMBINATION'
        ELSE NULL
    END AS combination_type,

    -- Common ICS flags
    CASE WHEN base_orders.statement_medication_name LIKE '%BECLOMETASONE%' OR base_orders.bnf_code LIKE '0302000C0%' THEN TRUE ELSE FALSE END AS is_beclometasone,
    CASE WHEN base_orders.statement_medication_name LIKE '%BUDESONIDE%' OR base_orders.bnf_code LIKE '0302000K0%' THEN TRUE ELSE FALSE END AS is_budesonide,
    CASE WHEN base_orders.statement_medication_name LIKE '%FLUTICASONE%' OR base_orders.bnf_code LIKE '0302000N0%' THEN TRUE ELSE FALSE END AS is_fluticasone,
    CASE WHEN base_orders.statement_medication_name LIKE '%MOMETASONE%' OR base_orders.bnf_code LIKE '0302000R0%' THEN TRUE ELSE FALSE END AS is_mometasone,
    CASE WHEN base_orders.statement_medication_name LIKE '%CICLESONIDE%' OR base_orders.bnf_code LIKE '0302000U0%' THEN TRUE ELSE FALSE END AS is_ciclesonide,

    -- Preparation type flags
    CASE WHEN base_orders.bnf_code LIKE '030200%' THEN TRUE ELSE FALSE END AS is_single_agent,
    CASE WHEN base_orders.bnf_code LIKE '030201%' THEN TRUE ELSE FALSE END AS is_combination_therapy,

    -- MART (Maintenance and Reliever Therapy) potential flag
    CASE
        WHEN base_orders.statement_medication_name LIKE '%BUDESONIDE%' AND base_orders.statement_medication_name LIKE '%FORMOTEROL%' THEN TRUE
        ELSE FALSE
    END AS is_mart_eligible,

    -- Calculate time since order
    DATEDIFF(day, base_orders.order_date, CURRENT_DATE()) AS days_since_order,

    -- Order recency flags (ICS are typically long-term therapy)
    CASE
        WHEN DATEDIFF(day, base_orders.order_date, CURRENT_DATE()) <= 90 THEN TRUE
        ELSE FALSE
    END AS is_recent_3m,

    CASE
        WHEN DATEDIFF(day, base_orders.order_date, CURRENT_DATE()) <= 180 THEN TRUE
        ELSE FALSE
    END AS is_recent_6m,

    CASE
        WHEN DATEDIFF(day, base_orders.order_date, CURRENT_DATE()) <= 365 THEN TRUE
        ELSE FALSE
    END AS is_recent_12m

FROM ({{ get_medication_orders(bnf_code='0302') }}) base_orders
ORDER BY base_orders.person_id, base_orders.order_date DESC
