CREATE OR REPLACE DYNAMIC TABLE DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PROG_LTC_LCS_CF_SUMMARY (
    PERSON_ID VARCHAR,
    SK_PATIENT_ID VARCHAR,
    AGE NUMBER,
    -- CKD 61: Two consecutive eGFR readings below 60
    HAS_CKD BOOLEAN,
    LATEST_EGFR_DATE DATE,
    PREVIOUS_EGFR_DATE DATE,
    LATEST_EGFR_VALUE NUMBER,
    PREVIOUS_EGFR_VALUE NUMBER,
    -- CKD 62: Two consecutive UACR readings above 4
    HAS_ELEVATED_UACR BOOLEAN,
    LATEST_UACR_DATE DATE,
    PREVIOUS_UACR_DATE DATE,
    LATEST_UACR_VALUE NUMBER,
    PREVIOUS_UACR_VALUE NUMBER,
    -- CVD 61: High QRISK2
    HAS_HIGH_QRISK2 BOOLEAN,
    LATEST_QRISK2_HIGH_DATE DATE,
    LATEST_QRISK2_HIGH_VALUE NUMBER,
    -- CVD 62: Moderate QRISK2
    HAS_MODERATE_QRISK2 BOOLEAN,
    LATEST_QRISK2_MODERATE_DATE DATE,
    LATEST_QRISK2_MODERATE_VALUE NUMBER,
    -- CVD 63: Statin Review
    NEEDS_STATIN_REVIEW BOOLEAN,
    LATEST_STATIN_REVIEW_DATE DATE,
    LATEST_NON_HDL_DATE DATE,
    LATEST_NON_HDL_VALUE NUMBER,
    -- CVD 64: High Dose Statins
    NEEDS_HIGH_DOSE_STATIN BOOLEAN,
    -- CVD 65: Moderate Dose Statins
    NEEDS_MODERATE_DOSE_STATIN BOOLEAN,
    LATEST_QRISK2_MODERATE_DOSE_DATE DATE,
    LATEST_QRISK2_MODERATE_DOSE_VALUE NUMBER,
    -- Metadata
    LAST_REFRESH_DATE TIMESTAMP,
    INDICATOR_VERSION VARCHAR
)
COMMENT = 'Summary table for LTC LCS case finding indicators. Includes CKD indicators (61-62) and CVD indicators (61-65) with their respective flags and dates.'
TARGET_LAG = '4 hours'
REFRESH_MODE = AUTO
INITIALIZE = ON_CREATE
WAREHOUSE = NCL_ANALYTICS_XS
AS
WITH BasePopulation AS (
    -- Get base population
    SELECT DISTINCT
        bp.PERSON_ID,
        bp.SK_PATIENT_ID,
        age.AGE
    FROM DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.INTERMEDIATE_LTC_LCS_CF_BASE_POPULATION bp
    JOIN DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PERSON_AGE age
        USING (PERSON_ID)
)
-- Final selection
SELECT
    bp.PERSON_ID,
    bp.SK_PATIENT_ID,
    bp.AGE,
    -- CKD 61: Two consecutive eGFR readings below 60
    COALESCE(ckd61.HAS_CKD, FALSE) AS HAS_CKD,
    ckd61.LATEST_EGFR_DATE,
    ckd61.PREVIOUS_EGFR_DATE,
    ckd61.LATEST_EGFR_VALUE,
    ckd61.PREVIOUS_EGFR_VALUE,
    -- CKD 62: Two consecutive UACR readings above 4
    COALESCE(ckd62.HAS_ELEVATED_UACR, FALSE) AS HAS_ELEVATED_UACR,
    ckd62.LATEST_UACR_DATE,
    ckd62.PREVIOUS_UACR_DATE,
    ckd62.LATEST_UACR_VALUE,
    ckd62.PREVIOUS_UACR_VALUE,
    -- CVD 61: High QRISK2
    COALESCE(cvd61.HAS_HIGH_QRISK2, FALSE) AS HAS_HIGH_QRISK2,
    cvd61.LATEST_QRISK2_DATE AS LATEST_QRISK2_HIGH_DATE,
    cvd61.LATEST_QRISK2_VALUE AS LATEST_QRISK2_HIGH_VALUE,
    -- CVD 62: Moderate QRISK2
    COALESCE(cvd62.HAS_MODERATE_QRISK2, FALSE) AS HAS_MODERATE_QRISK2,
    cvd62.LATEST_QRISK2_DATE AS LATEST_QRISK2_MODERATE_DATE,
    cvd62.LATEST_QRISK2_VALUE AS LATEST_QRISK2_MODERATE_VALUE,
    -- CVD 63: Statin Review
    COALESCE(cvd63.NEEDS_STATIN_REVIEW, FALSE) AS NEEDS_STATIN_REVIEW,
    cvd63.LATEST_STATIN_DATE AS LATEST_STATIN_REVIEW_DATE,
    cvd63.LATEST_NON_HDL_DATE,
    cvd63.LATEST_NON_HDL_VALUE,
    -- CVD 64: High Dose Statins
    COALESCE(cvd64.NEEDS_HIGH_DOSE_STATIN, FALSE) AS NEEDS_HIGH_DOSE_STATIN,
    -- CVD 65: Moderate Dose Statins
    COALESCE(cvd65.NEEDS_MODERATE_DOSE_STATIN, FALSE) AS NEEDS_MODERATE_DOSE_STATIN,
    cvd65.LATEST_QRISK2_DATE AS LATEST_QRISK2_MODERATE_DOSE_DATE,
    cvd65.LATEST_QRISK2_VALUE AS LATEST_QRISK2_MODERATE_DOSE_VALUE,
    -- Metadata
    CURRENT_TIMESTAMP() AS LAST_REFRESH_DATE,
    '1.0' AS INDICATOR_VERSION
FROM BasePopulation bp
LEFT JOIN DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PROG_LTC_LCS_CF_CKD_61 ckd61
    ON bp.PERSON_ID = ckd61.PERSON_ID
LEFT JOIN DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PROG_LTC_LCS_CF_CKD_62 ckd62
    ON bp.PERSON_ID = ckd62.PERSON_ID
LEFT JOIN DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PROG_LTC_LCS_CF_CVD_61 cvd61
    ON bp.PERSON_ID = cvd61.PERSON_ID
LEFT JOIN DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PROG_LTC_LCS_CF_CVD_62 cvd62
    ON bp.PERSON_ID = cvd62.PERSON_ID
LEFT JOIN DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PROG_LTC_LCS_CF_CVD_63 cvd63
    ON bp.PERSON_ID = cvd63.PERSON_ID
LEFT JOIN DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PROG_LTC_LCS_CF_CVD_64 cvd64
    ON bp.PERSON_ID = cvd64.PERSON_ID
LEFT JOIN DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PROG_LTC_LCS_CF_CVD_65 cvd65
    ON bp.PERSON_ID = cvd65.PERSON_ID; 