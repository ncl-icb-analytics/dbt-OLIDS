CREATE OR REPLACE DYNAMIC TABLE DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PROG_LTC_LCS_CF_CKD_64 (
    PERSON_ID VARCHAR, -- Unique identifier for the person
    SK_PATIENT_ID VARCHAR, -- Surrogate key for the patient
    AGE NUMBER, -- Age of the patient
    HAS_ACUTE_KIDNEY_INJURY BOOLEAN, -- Flag indicating if person has AKI in last 3 years
    HAS_BPH_GOUT BOOLEAN, -- Flag indicating if person has BPH or Gout
    HAS_LITHIUM_MEDICATION BOOLEAN, -- Flag indicating if person is on lithium in last 6 months
    HAS_MICROHAEMATURIA BOOLEAN, -- Flag indicating if person has microhaematuria with specific conditions
    LATEST_AKI_DATE DATE, -- Date of most recent AKI
    LATEST_BPH_GOUT_DATE DATE, -- Date of most recent BPH/Gout condition
    LATEST_LITHIUM_DATE DATE, -- Date of most recent lithium medication
    LATEST_MICROHAEMATURIA_DATE DATE, -- Date of most recent microhaematuria
    LATEST_UACR_DATE DATE, -- Date of most recent UACR > 30
    LATEST_UACR_VALUE NUMBER, -- Most recent UACR value
    ALL_CONDITION_CODES ARRAY, -- Array of all condition codes
    ALL_CONDITION_DISPLAYS ARRAY -- Array of all condition display terms
)
COMMENT = 'Dimension table for LTC LCS case finding indicator CKD_64: Patients with specific conditions (AKI, BPH/Gout, Lithium, Microhaematuria) who have not had eGFR in last 12 months.'
TARGET_LAG = '4 hours'
REFRESH_MODE = AUTO
INITIALIZE = ON_CREATE
WAREHOUSE = NCL_ANALYTICS_XS
AS
WITH BasePopulation AS (
    -- Get base population of patients over 17
    -- Note: Base population already excludes those on CKD and Diabetes registers
    SELECT DISTINCT
        bp.PERSON_ID,
        bp.SK_PATIENT_ID,
        age.AGE
    FROM DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.INTERMEDIATE_LTC_LCS_CF_BASE_POPULATION bp
    JOIN DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.DIM_PERSON_AGE age
        USING (PERSON_ID)
    WHERE age.AGE >= 17
),
ClinicalEvents AS (
    -- Get all relevant clinical events in one go
    SELECT
        PERSON_ID,
        SK_PATIENT_ID,
        CLINICAL_EFFECTIVE_DATE,
        CLUSTER_ID,
        RESULT_VALUE,
        CONCEPT_CODE,
        CONCEPT_DISPLAY,
        -- Flag each type of event
        CASE 
            WHEN CLUSTER_ID = 'CKD_ACUTE_KIDNEY_INJURY' 
                AND CLINICAL_EFFECTIVE_DATE >= ADD_MONTHS(CURRENT_DATE(), -36) THEN TRUE
            ELSE FALSE
        END AS IS_AKI,
        CASE 
            WHEN CLUSTER_ID = 'CKD_BPH_GOUT' THEN TRUE
            ELSE FALSE
        END AS IS_BPH_GOUT,
        CASE 
            WHEN CLUSTER_ID IN ('LITHIUM_MEDICATIONS', 'SULFASALAZINE_MEDICATIONS', 'TACROLIMUS_MEDICATIONS')
                AND CLINICAL_EFFECTIVE_DATE >= ADD_MONTHS(CURRENT_DATE(), -6) THEN TRUE
            ELSE FALSE
        END AS IS_LITHIUM,
        CASE 
            WHEN CLUSTER_ID = 'HAEMATURIA' THEN TRUE
            ELSE FALSE
        END AS IS_MICROHAEMATURIA,
        CASE 
            WHEN CLUSTER_ID = 'UACR_TESTING' AND RESULT_VALUE > 30 THEN TRUE
            ELSE FALSE
        END AS IS_UACR_HIGH,
        CASE 
            WHEN CLUSTER_ID IN ('URINE_BLOOD_NEGATIVE', 'PROTEINURIA') THEN TRUE
            ELSE FALSE
        END AS IS_URINE_TEST
    FROM DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.INTERMEDIATE_LTC_LCS_RAW_DATA
    WHERE CLUSTER_ID IN (
        'CKD_ACUTE_KIDNEY_INJURY',
        'CKD_BPH_GOUT',
        'LITHIUM_MEDICATIONS',
        'SULFASALAZINE_MEDICATIONS',
        'TACROLIMUS_MEDICATIONS',
        'HAEMATURIA',
        'UACR_TESTING',
        'URINE_BLOOD_NEGATIVE',
        'PROTEINURIA'
    )
),
ConditionSummary AS (
    -- Summarise conditions per person
    SELECT
        PERSON_ID,
        SK_PATIENT_ID,
        -- AKI
        MAX(CASE WHEN IS_AKI THEN CLINICAL_EFFECTIVE_DATE END) AS LATEST_AKI_DATE,
        BOOLOR_AGG(IS_AKI) AS HAS_ACUTE_KIDNEY_INJURY,
        -- BPH/Gout
        MAX(CASE WHEN IS_BPH_GOUT THEN CLINICAL_EFFECTIVE_DATE END) AS LATEST_BPH_GOUT_DATE,
        BOOLOR_AGG(IS_BPH_GOUT) AS HAS_BPH_GOUT,
        -- Lithium
        MAX(CASE WHEN IS_LITHIUM THEN CLINICAL_EFFECTIVE_DATE END) AS LATEST_LITHIUM_DATE,
        BOOLOR_AGG(IS_LITHIUM) AS HAS_LITHIUM_MEDICATION,
        -- Microhaematuria
        MAX(CASE WHEN IS_MICROHAEMATURIA THEN CLINICAL_EFFECTIVE_DATE END) AS LATEST_MICROHAEMATURIA_DATE,
        BOOLOR_AGG(IS_MICROHAEMATURIA) AS HAS_MICROHAEMATURIA,
        -- UACR
        MAX(CASE WHEN IS_UACR_HIGH THEN CLINICAL_EFFECTIVE_DATE END) AS LATEST_UACR_DATE,
        MAX(CASE WHEN IS_UACR_HIGH THEN RESULT_VALUE END) AS LATEST_UACR_VALUE,
        -- Urine tests
        MAX(CASE WHEN IS_URINE_TEST THEN CLINICAL_EFFECTIVE_DATE END) AS LATEST_URINE_TEST_DATE,
        -- Codes and displays
        ARRAY_AGG(DISTINCT CONCEPT_CODE) WITHIN GROUP (ORDER BY CONCEPT_CODE) AS ALL_CONDITION_CODES,
        ARRAY_AGG(DISTINCT CONCEPT_DISPLAY) WITHIN GROUP (ORDER BY CONCEPT_DISPLAY) AS ALL_CONDITION_DISPLAYS
    FROM ClinicalEvents
    GROUP BY PERSON_ID, SK_PATIENT_ID
),
EGFRInLastYear AS (
    -- Get patients with eGFR in last 12 months to exclude
    SELECT DISTINCT PERSON_ID
    FROM DATA_LAB_NCL_TRAINING_TEMP.HEI_MIGRATION.INTERMEDIATE_LTC_LCS_RAW_DATA
    WHERE CLUSTER_ID = 'EGFR_TESTING'
        AND RESULT_VALUE > 0
        AND CLINICAL_EFFECTIVE_DATE >= ADD_MONTHS(CURRENT_DATE(), -12)
),
MicrohaematuriaWithConditions AS (
    -- Get patients with microhaematuria and specific conditions
    SELECT
        cs.*,
        CASE 
            WHEN cs.LATEST_URINE_TEST_DATE IS NULL 
                OR cs.LATEST_MICROHAEMATURIA_DATE > cs.LATEST_URINE_TEST_DATE
                OR (cs.LATEST_UACR_DATE IS NOT NULL AND cs.LATEST_UACR_DATE >= cs.LATEST_MICROHAEMATURIA_DATE)
            THEN TRUE
            ELSE FALSE
        END AS HAS_VALID_MICROHAEMATURIA
    FROM ConditionSummary cs
)
-- Final selection
SELECT
    bp.PERSON_ID,
    bp.SK_PATIENT_ID,
    bp.AGE,
    COALESCE(mh.HAS_ACUTE_KIDNEY_INJURY, FALSE) AS HAS_ACUTE_KIDNEY_INJURY,
    COALESCE(mh.HAS_BPH_GOUT, FALSE) AS HAS_BPH_GOUT,
    COALESCE(mh.HAS_LITHIUM_MEDICATION, FALSE) AS HAS_LITHIUM_MEDICATION,
    COALESCE(mh.HAS_VALID_MICROHAEMATURIA, FALSE) AS HAS_MICROHAEMATURIA,
    mh.LATEST_AKI_DATE,
    mh.LATEST_BPH_GOUT_DATE,
    mh.LATEST_LITHIUM_DATE,
    mh.LATEST_MICROHAEMATURIA_DATE,
    mh.LATEST_UACR_DATE,
    mh.LATEST_UACR_VALUE,
    mh.ALL_CONDITION_CODES,
    mh.ALL_CONDITION_DISPLAYS
FROM BasePopulation bp
LEFT JOIN MicrohaematuriaWithConditions mh
    USING (PERSON_ID)
WHERE NOT EXISTS (
    SELECT 1 FROM EGFRInLastYear egfr 
    WHERE egfr.PERSON_ID = bp.PERSON_ID
)
AND (
    COALESCE(mh.HAS_ACUTE_KIDNEY_INJURY, FALSE)
    OR COALESCE(mh.HAS_BPH_GOUT, FALSE)
    OR COALESCE(mh.HAS_LITHIUM_MEDICATION, FALSE)
    OR COALESCE(mh.HAS_VALID_MICROHAEMATURIA, FALSE)
); 