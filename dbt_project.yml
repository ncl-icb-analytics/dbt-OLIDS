name: 'snowflake_hei_migration'
version: '1.0'
config-version: 2

profile: 'snowflake_hei_migration'

target-path: "target"
clean-targets:
  - "target"
  - "dbt_modules"

model-paths: ["models"]

# Configure dbt audit schema naming
vars:
  dbt_audit_schema: "test_audit"  # Cleaner name instead of dbt_dbt_test_audit
  
  # Flu campaign configuration
  flu_current_campaign: "flu_2024_25"     # Current flu campaign
  flu_previous_campaign: "flu_2023_24"    # Previous flu campaign (for comparison)
  flu_audit_end_date: "CURRENT_DATE"      # Default audit end date (override with --vars)

# Configure test failure storage (only for failures)
# Note: This creates tables for all tests, populated only on failure
# Consider removing if too many empty tables are created
tests:
  +store_failures: false  # Disabled by default to avoid clutter
  +schema: "test_audit"

models:
  snowflake_hei_migration:
    +materialized: table
    +database: "{{ env_var('SNOWFLAKE_TARGET_DATABASE', 'DATA_LAB_OLIDS_UAT') }}"
    # Global post-hook to add DBT metadata to all model comments
    +post_hook: |
      COMMENT ON TABLE {{ this }} IS (
        SELECT CASE 
          WHEN comment IS NOT NULL AND comment != '' 
          THEN CONCAT(comment, CHR(10), CHR(10), 'ðŸ¤– Generated by dbt {{ dbt_version }} on {{ run_started_at.strftime("%Y-%m-%d %H:%M:%S") }}')
          ELSE 'ðŸ¤– Generated by dbt {{ dbt_version }} on {{ run_started_at.strftime("%Y-%m-%d %H:%M:%S") }}'
        END
        FROM information_schema.tables 
        WHERE table_name = '{{ this.name }}' 
        AND table_schema = '{{ this.schema }}'
      )
    staging:
      +materialized: view
      +database: "{{ env_var('SNOWFLAKE_TARGET_DATABASE', 'DATA_LAB_OLIDS_UAT') }}"
      # Models reading from Data_Store_OLIDS_UAT
      olids:
        +database: "{{ env_var('SNOWFLAKE_TARGET_DATABASE', 'DATA_LAB_OLIDS_UAT') }}"  # Where to create the views
        +grants:
          reference_usage: ["{{ env_var('SNOWFLAKE_SOURCE_DATABASE', 'Data_Store_OLIDS_UAT') }}"]  # Database we need to read from
    intermediate:
      +materialized: table
      +database: "{{ env_var('SNOWFLAKE_TARGET_DATABASE', 'DATA_LAB_OLIDS_UAT') }}"
    marts:
      +materialized: table
      +database: "{{ env_var('SNOWFLAKE_TARGET_DATABASE', 'DATA_LAB_OLIDS_UAT') }}"

seeds:
  snowflake_hei_migration:
    +database: "{{ env_var('SNOWFLAKE_TARGET_DATABASE', 'DATA_LAB_OLIDS_UAT') }}"
    +schema: REFERENCE
